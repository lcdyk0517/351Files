name: Build 351Files (arm64)

on:
  workflow_dispatch:
    inputs:
      device:
        description: "设备型号"
        required: true
        default: "MYMINI"
      firmware:
        description: "固件类型"
        required: true
        default: "ArkOS"
      start_path:
        description: "START_PATH"
        required: true
        default: "/roms"
      res_path:
        description: "RES_PATH"
        required: true
        default: "./res"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Enable QEMU for arm64
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      # 生成容器内要执行的脚本，避免 heredoc 缩进/转义问题
      - name: Prepare container script
        shell: bash
        run: |
          mkdir -p ci
          cat > ci/container.sh <<'SCRIPT'
          #!/usr/bin/env bash
          set -euo pipefail

          # buster 已 EOL：切换 archive 源并关闭有效期检查
          cat >/etc/apt/sources.list <<'EOF'
          deb http://archive.debian.org/debian buster main contrib non-free
          deb http://archive.debian.org/debian-security buster/updates main contrib non-free
          deb http://archive.debian.org/debian buster-updates main contrib non-free
          EOF
          echo 'Acquire::Check-Valid-Until "false";' >/etc/apt/apt.conf.d/99no-check-valid-until

          apt -o Acquire::AllowInsecureRepositories=true update
          DEBIAN_FRONTEND=noninteractive apt -o Acquire::AllowInsecureRepositories=true install -y \
            build-essential pkg-config binutils \
            libsdl2-dev libsdl2-image-dev libsdl2-ttf-dev git ca-certificates

          # 修正脚本行尾与 shebang（避免 /bin/env 不存在、CRLF 影响执行）
          if [ -f build_RG351.sh ]; then
            sed -i 's/\r$//' build_RG351.sh
            sed -i '1 s|^#!/bin/env bash$|#!/usr/bin/env bash|' build_RG351.sh
            chmod +x build_RG351.sh
          fi

          # 强制静态链接 C++ 运行库（glibc 仍动态），避免 GLIBCXX_* 过新
          export CXX="g++ -static-libstdc++ -static-libgcc"

          # 编译与打包（显式用 bash 调用，绕过 shebang）
          bash ./build_RG351.sh "${{ github.event.inputs.device }}" \
                                "${{ github.event.inputs.firmware }}" \
                                "${{ github.event.inputs.start_path }}" \
                                "${{ github.event.inputs.res_path }}"
          SCRIPT
          chmod +x ci/container.sh

      - name: Build inside arm64 container (Debian buster archive)
        shell: bash
        run: |
          docker run --rm --platform linux/arm64 \
            -v "$PWD":/src -w /src arm64v8/debian:buster \
            bash /src/ci/container.sh

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: 351Files-${{ github.event.inputs.device }}-${{ github.event.inputs.firmware }}
          path: build/*.tgz
          if-no-files-found: error
